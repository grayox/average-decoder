function deleteSheet(){SpreadsheetApp.getActive().deleteSheet(SpreadsheetApp.getActive().getSheetByName("Copy of Scraped 1"))} // Deletes specified sheet
// ---------- VENDOR: FCI EXCHANGE ----------
function scrape_fciEx_list(src){ // http://www.fciexchange.com
    var KEY = [ , "link_details" , "prodId" , "city"    , "state" , "link_sellerListings" , "sellerId" , "foo"         , "loanStatus" , "foo"           , "lienPos" , "foo"              , "balBeg" , "foo"               , "balCur" , "foo"       , "rateNote" , "foo"              ,"ask" , "pctUpb" ]
    ,   QUE = [ , "Product ID :" , ""       , ".html\"" , ""      , "Seller ID :"         , ""         , "Loan Status" , "<td "       , "Lien Position" , "<td "    , "Original Balance" , "<td "   , "Principal Balance" , "<td "   , "Note Rate" , "<td "     , "Indicative Offer" , "<"  , "<td "   ]
    ,   BEG = [ , "href=\""      , ">"      , ">"       , " "     , "href=\""             , ">"        , "<"           , ">"          , "<"             , ">"       , "<"                , ">"      , "<"                 , ">"      , "<"         , ">"        , "<td "             , ">"  , ">"      ]
    ,   END = [ , "\""           , "<"      , ","       , "<"     , "\""                  , "<"        , ">"           , "<"          , ">"             , "<"       , ">"                , "<"      , ">"                 , "<"      , ">"         , "<"        , ">"                , "<"  , "<"      ]
    ,  STEM = "http://www.fciexchange.com",src=src||UrlFetchApp.fetch(STEM+"/all-loans.php").getContentText(),arr=src.split("<tr class=\"rowRedGradient-1\"");arr.shift();//Logger.log(arr.length);}
    var i=arr.length;while(i--){arr[i]=LibraryjsUtil._scrapeDataset(arr[i],KEY,QUE,BEG,END,["$",",","%"," of UPB"],["","","",""])
    // Special Processing — after inspecting results, we process as follows: 1. Eliminate sold/pending 2. Parse address
       if(arr[i].city .length>200){var keys=Object.keys(arr[i]),j=keys.length;while(j---3){arr[i][keys[j]]=""}arr[i].city="SOLD";}// Bimodal distribution of results: out.city.length<50:for sale;out.city.length<2100:sold or pending
       if(arr[i].state.length>  2){try  {arr[i].sa =arr[i].city ;var csz=arr[i].state.split(" ");if(csz[csz.length-1].length >2){arr[i].zip  =csz.pop()}else{arr[i].zip=""}arr[i].state=csz.pop();arr[i].city=csz.join(" "); }catch(e){Logger.log(e.message)}}else{arr[i].sa="";arr[i].zip="";} // If out.state.length>2, state={city state zip}, city={sa}
       if(arr[i].zip  .length>  0){while(arr[i].zip.length<5){arr[i].zip="0"+arr[i].zip}}arr[i].zip=arr[i].zip.slice(0,5)
          arr[i].sa   =arr[i].sa   .replace(/\w*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}); // Reference: http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript
          arr[i].city =arr[i].city .replace(/\w*/g,function(txt){return txt.charAt(0).toUpperCase()+txt.substr(1).toLowerCase()}); // Reference: http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript
          arr[i].state=arr[i].state.toUpperCase();var t={"Performing":"P","Non Performing":"N","Newly Originated":"O"},kys=Object.keys(t);arr[i].loanStatus=(kys.indexOf(arr[i].loanStatus)>-1)?t[arr[i].loanStatus]:"X";}/*Logger.log(arr);*/return arr;}
// function loginId(){var STEM="http://www.fciexchange.com",str=UrlFetchApp.fetch(STEM+"/fci-exchange-login.php",{method:"post",payload:{c1:"marianhiers",c2:"teleworm",c5:"on",c6:"on",/*"Qform__FormId":”FrmLogin”,"Qform__FormControl":”c3”/*,Qform__FormEvent:”QClickEvent”,Qform__FormCallType:”Server”,Qform__FormCheckableControls:”c5 c6”*/}/*,headers:{}*/}).getHeaders()/*.getContentText()*/;Logger.log(str);return str;}
function scrape_fciEx_detail(act/*,PHPSESSID,fciAuth*/){act=act||"/FLORIDA/Residential/Performing/0011454.html";//PHPSESSID=PHPSESSID||"e7298f7bc17376290d9a070cd043c321";fciAuth=fciAuth||"code1%3Dmarianhiers%26code2%3D3261270600de694a9d55de64e67c88aa";
    var KEY = [ , "estPropVal_1"              , "address"        , "ask_1"         , "foo"         , "productId" , "foo"            , "lienPos" , "foo"                   , "loanStatus" , "foo"      , "paidTo" , "foo"            , "loanMaturity" , "foo"        , "loanType" , "foo"        , "ltvRatio" , "foo"                   , "balBeg" , "foo"                , "balCur" , "foo"                , "estPropVal_2" , "foo"             , "valuationType" , "foo"             , "valuationDate" , "foo"        , "noteRate" , "foo"        , "soldRate" , "foo"               , "originationDate" , "foo"       , "pmtFrequency" , "foo"               , "pmtNextDue" , "foo"              , "pmtMonthlyAmt" , "foo"        , "taxesDue" , "foo"           , "loanCharges" , "foo"               , "lateChargeDays" , "foo"              , "unpaidInterest:" , "foo"          , "lateCharge:" , "ask_2"                                  , "buyNow"              , "comments" ]
    ,   QUE = [ , "current property value of" , "Please Wait..." , "Asking Price:" , "Product ID:" , "<td "      , "Note Position:" , "<td "    , "Payment History Type:" , "<span "     , "Paid To:" , "<span " , "Loan Maturity:" , "<span "       , "Loan Type:" , "<span "   , "LTV Ratio:" , "<span "   , "Original Loan Amount:" , "<span " , "Principal Balance:" , "<span " , "Est. Market Value:" , "<span "       , "Valuation Type:" , "<span "        , "Valuation Date:" , "<span "        , "Note Rate:" , "<span "   , "Sold Rate:" , "<span "   , "Origination Date:" , "<span "          , "Payments:" , "<span "       , "Next Payment Due:" , "<span "     , "Monthly Payment:" , "<span "        , "Taxes Due:" , "<span "   , "Loan Charges:" , "<span "      , "Late Charge Days:" , "<span "         , "Unpaid Interest:" , "<span "          , "Late Charge:" , "<span "      , "Seller may consider offers starting at" , "You Can Buy Now for" , ">"        ]
    ,   BEG = [ , " "                         , "<div>"          , " "             , "<"           , ">"         , "<"              , ">"       , "<span "                , ">"          , "<span "   , ">"      , "<span "         , ">"            , "<span "     , ">"        , "<span "     , ">"        , "<span "                , ">"      , "<span "             , ">"      , "<span "             , ">"            , "<span "          , ">"             , "<span "          , ">"             , "<span "     , ">"        , "<span "     , ">"        , "<span "            , ">"               , "<span "    , ">"            , "<span "            , ">"          , "<span "           , ">"             , "<span "     , ">"        , "<span "        , ">"           , "<span "            , ">"              , "<span "           , ">"               , "<span "       , ">"           , " "                                      , "$"                   , ">"        ]
    ,   END = [ , " "                         , "<" /*","*/      , " of
    ,  STEM = "http://www.fciexchange.com",str=UrlFetchApp.fetch(STEM+act/*,{method:"get",headers:{cookie:{PHPSESSID:PHPSESSID,fciAuth:fciAuth}}}*/).getContentText()
    ,   out = LibraryjsUtil._scrapeDataset(str,KEY,QUE,BEG,END,["$",",","%"," of UPB"],["","","",""]),arr=out.address.split(" ");out.state=arr.pop();out.city=arr.join();/*Logger.log(str);*/Logger.log(JSON.stringify(out));return out;}
//
// No passwords, all anonymous
// Using prodId=12615 — discovered this to be a url parameter on anonymous GET request by using search form on http://www.fciexchange.com/ home page — per http://www.fciexchange.com/all-loans.php?prodId=&state=-1&lp=-1&type=0
// Manually fetch each page x 32 pages to fetch current inventory
// Can't get 1. sorting by product ID (age / posting date) 2. pagination 3. login and password recognition
// Will clock/cycle to search for each new sequential (iterative) ID on a regular trigger (min, hr, day, etc.)
// Therefore, for initial data, manually paginate, manually copy, manually paste into google spreadsheet
//
function scrape_fciEx_ss(){var sheetIn=SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Source"),rangeIn=sheetIn.getRange(sheetIn.getLastRow(),1,1,sheetIn.getLastColumn()),datob=rangeIn.getValues();//Logger.log(JSON.stringify(datob));
    var out,scraped=[],i=datob[0].length;while(i--){scraped[i]=scrape_fciEx_list(datob[0][i])}out=LibraryjsUtil.ao2aa(LibraryjsUtil._flatten(scraped));//Logger.log(out);
    var rangeOut,sheetOut=SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Scraped");sheetOut.insertRowsAfter(sheetOut.getMaxRows()-1,out.length);rangeOut=sheetOut.getRange(sheetOut.getLastRow()+1,1,out.length,out[0].length);rangeOut.setValues(out);return}
// ---------- VENDOR: NOTE MARKETPLACE ----------
function scrape_noteMktPl_rss(){ // http://www.notemarketplace.com/
    var act = ["http://www.notemarketplace.com/ad-category/performing-notes-for-sale/feed/"/*vol:110*/,"http://www.notemarketplace.com/ad-category/non-performing-notes/feed/"/*vol:51*/,"http://www.notemarketplace.com/ad-category/new-loans-to-fund/feed/"/*vol:31*/]
    ,   str = UrlFetchApp.fetch(act[0]).getContentText()
    ,   doc = XmlService.parse(str)
    ,    ob = xmlToJson(str);
    Logger.log(JSON.stringify(ob))}
function scrape_noteMktPl_list(){ // http://www.notemarketplace.com/
    var arr=[],str,act,pg=0,STEM="http://www.notemarketplace.com/page/",PARAMS="/?s=What+are+you+looking+for%3F&sa=search&scat=0" // "http://www.notemarketplace.com/page/2/?s=What+are+you+looking+for%3F&sa=search&scat=0" // Cookie: wordpress_logged_in_77d86343e298525b7c02ca2dcc4fc073=CindyAbbott%7C1386200283%7Cbda07d1986569904ab6876a427817957
    ,   KEY = [ , "link_details_1" , "title_1" , "ask_1"                , "loanStatus"  , "link_seller"     , "sellerId"       , "foo"   , "dateListed_1" , "description"         ]
    ,   QUE = [ , "<a "            , "title"   , "class=\"post-price\"" , "rel=\"tag\"" , "class=\"owner\"" , "rel=\"author\"" , "<span" , "<span"        , "class=\"post-desc\"" ]
    ,   BEG = [ , "href=\""        , "=\""     , ">"                    , ">"           , "href=\""         , ">"              , " "     , ">"            , ">"                   ]
    ,   END = [ , "\""             , "\""      , "<"                    , "<"           , "\""              , "<"              , ">"     , "<"            , "<"                   ]
    ;do{act=STEM+(++pg)+PARAMS;try{if(UrlFetchApp.fetch(act).getResponseCode()==200){str=UrlFetchApp.fetch(act).getContentText()}else{return}}catch(e){Logger.log(e.message);return}
        arr[pg]=str.split("<div class=\"post-left\">");arr[pg].shift();var i=arr[pg].length;while(i--){arr[pg][i]=LibraryjsUtil._scrapeDataset(arr[pg][i],KEY,QUE,BEG,END,["$",",","%"],["","",""])}//Logger.log(arr[pg]);
        }while(!pg/*arr[pg].length*/)return arr;}
function scrape_noteMktPl_detail(act/*,PHPSESSID,fciAuth*/){act=act||"www.notemarketplace.com/ads/jonesboro-ga-performing-va-loan/";//PHPSESSID=PHPSESSID||"e7298f7bc17376290d9a070cd043c321";fciAuth=fciAuth||"code1%3Dmarianhiers%26code2%3D3261270600de694a9d55de64e67c88aa";
    var KEY = [ , "ask_2"                , "link_details_2" , "title_2" , "balCur"                    , "propVal"              , "link_zillow" , "sa"                , "city"           , "state"  , "zip"                , "balBeg"            , "borRate"        , "balloon"      , "am"            , "pmtNote"       , "lastPmtAmount"        , "lastPmtDate"        , "originationDate"   , "maturityDate"   , "lienPosition"   , "ownerOccupied"            , "propertyType"   , "sqft"              , "dateListed_2" , "dateListingExpires" ]
    ,   QUE = [ , "class=\"post-price\"" , "<a "            , "title="  , "Unpaid Principal Balance:" , "Est. Property Value:" , "Address:"    , "target=\"_blank\"" , "Property City:" , "State:" , "Property Zip Code:" , "Original Balance:" , "Interest Rate:" , "Balloon Pmt:" , "Amortization:" , "Note Payment:" , "Last Payment Amount:" , "Last Payment Date:" , "Origination Date:" , "Maturity Date:" , "Note Position:" , "Owner Occupied Property:" , "Property Type:" , "Building Sq. Ft.:" , "Listed:"      , "Expires:"           ]
    ,   BEG = [ , ">"                    , "href=\""        , "\""      , ">"                         , ">"                    , "href=\""     , ">"                 , ">"              , ">"      , ">"                  , ">"                 , ">"              , ">"            , ">"             , ">"             , ">"                    , ">"                  , ">"                 , ">"              , ">"              , ">"                        , ">"              , ">"                 , ">"            , ">"                  ]
    ,   END = [ , "<"                    , "\""             , "\""      , "<"                         , "<"                    , "\""          , "<"                 , "<"              , "<"      , "<"                  , "<"                 , "<"              , "<"            , "<"             , "<"             , "<"                    , "<"                  , "<"                 , "<"              , "<"              , "<"                        , "<"              , "<"                 , "<"            , "<"                  ]
    ,   str = UrlFetchApp.fetch(act/*,{method:"get",headers:{cookie:{PHPSESSID:PHPSESSID,fciAuth:fciAuth}}}*/).getContentText()//;Logger.log(str);
    ,   out = LibraryjsUtil._scrapeDataset(str,KEY,QUE,BEG,END,["$",",","%"," | View on Zillow"],["","","",""]);Logger.log(JSON.stringify(out));return out;}