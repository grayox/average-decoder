// JSON visualization | viewers: http://chris.photobooks.com/json/default.htm | http://www.jsoneditoronline.org/
// function getEmailQuota(){Logger.log("Remaining email quota: " + MailApp.getRemainingDailyQuota());}
// Note: to accept doPost() from affiliate, (design decision:) must set: Publish > Deploy as web app > Execute the app as: me, Who has access to the app: Anyone, even anonymous // Otherwise, script will not run at server (though, client will receive responseCode=200); client response (200) is Google accounts sign-in page/form  // Decision Benefits: 1. script runs 2. script authorization bypass (i.e., not needed at UI) // Decision Costs: 1. Looser script security; mitigated by a. Site level access restrictions/permissions b. key method (e.g., switch/case k:foo)
function auth   (){}
function timer  (){Logger.log(new Date().getTime())}//1388228703613
function backup (){var desc="Scrape Realtor Backup — timestamp:"+new Date().getTime(),id,out=[],db=ScriptDb.getMyDb(),results=db.query({});while(results.hasNext()){out.unshift(results.next())}id=DriveApp.createFile(desc,JSON.stringify(out),MimeType.HTML).setDescription(desc);Logger.log(id);}
function print  (){var desc="Scrape Realtor Print — timestamp:"+new Date().getTime(),id,out=[],db=ScriptDb.getMyDb(),results=db.query({/*isRaw:false*/source:{name:"ZipRealty"/*db.not("Realtor")*/}});while(results.hasNext()){out.unshift(results.next())}id=DriveApp.createFile(desc,JSON.stringify(out),MimeType.HTML).setDescription(desc);Logger.log(id);}
function print_test(str){str=str||JSON.stringify(ScriptDb.getMyDb().load("S337185323966"));var desc="Scrape Realtor Print — timestamp:"+new Date().getTime();DriveApp.createFile(desc,str,MimeType.HTML);}
function size   (){var db=ScriptDb.getMyDb();Logger.log(db.query({/*isRaw:false*/source:{name:"ZipRealty"/*db.not("Realtor")*/}}).getSize())}
function showOne(){var db=ScriptDb.getMyDb();Logger.log(JSON.stringify(db.query({source:{name:"ZipRealty"}/*table:db.anyValue()/*isRaw:false*/}).next()));} // Show all records in database // Reference: https://developers.google.com/apps-script/scriptdb#saving_data
function showAll(){var db=ScriptDb.getMyDb(),arr=[],r,results=db.query({});while(results.hasNext()){r=results.next();arr.push(r)}Logger.log(JSON.stringify(arr))} // Show all records in database // Reference: https://developers.google.com/apps-script/scriptdb#saving_data
function del    (){var db=ScriptDb.getMyDb(),arr=[],r,results=db.query({/*isRaw:false*/source:{name:"ZipRealty"/*,db.not("Realtor")*/}});while(results.hasNext()){arr.push(results.next().getId());}db.removeByIdBatch(arr,false);} // Replaced: while(results.hasNext()){r=results.next();db.remove(r);}}
//function mod    (){var db=ScriptDb.getMyDb(),arr=[],r,results=db.query({xtable:"note"/*lienPos:db.anyOf(["1st",false,db.not(db.anyValue())])*/});while(results.hasNext()){r=results.next();try{r.pctLtv=Math.round(100*r.balCur/r.estValue)}catch(e){r.pctLtv="";Logger.log(e.message)}/*r.lienPos=1;*/arr.push(r);}db.saveBatch(arr,false)}
//function getEmailQuota(){Logger.log("Remaining email quota: " + MailApp.getRemainingDailyQuota());}
//function testCall(){Logger.log(UrlFetchApp.fetch("https://script.google.com/macros/s/AKfycbx_mgY9DdVYpBA3iGI2CYE0Aq3CbKrCrPQUJZu5S1unVUYaRP0/exec?k=9l4y95xhwwi8q2hbkslp&callback=jQuery1101041615460510365665_1390895886465&filterscount=0&groupscount=0&pagenum=0&pagesize=20&recordstartindex=0&recordendindex=18&featureClass=P&style=full&maxRows=50&_=1390895886466").getContentText())}
// --------------------------- INCOMING DATA SOURCE: SCRAPE : ZIP REALTY ---------------------------
function zipRealty_getCookies(){var out=UrlFetchApp.fetch("http://www.ziprealty.com/homes/for-sale/search/sandiego/proximity").getAllHeaders()["Set-Cookie"];Logger.log(out);return out}
function zipRealty_fetchList(){var page=0 // Fetches list data; // Separate fetch and scrape functions for convenience // Getting session variables is challenging on this web site vis a vis multiple server calls
    , payload   = { doSubmit         :  true
                  , distance         :  25.0
                  , keywords         : "'TLC' OR 'fixer' OR 'contractor' OR 'as-is'" // 'investor' OR 'as is' OR 'handyman' OR 'investors' OR 'investment' OR 'repairs' OR 'needs' OR 'work' OR 'probate' OR 'renovation' OR 'homepath' OR 'reduced' or 'flip' or 'develop' // max 4 search terms // don't use: 'rehab' (includes newly rehabbed) // "TLC" OR "fixer" OR "contractor" OR "as-is" == default "fixer upper" search generated by system
                  , proximity_street : "3130 Logan Ave"
                  , proximity_city   : "san diego"
                  , proximity_state  : "ca"
                  , proximity_zip    : "92113"
                  , results_per_page :  100 // 15 30 50 100
                  , searchButton     : "Search Now"
                  , sort             : "date_desc"
                  }//,home_sq_feet:,interest:,is_age_restricted:,is_fixer_upper:,is_foreclosure:,is_new_construction:,is_short_sale:,last_visit:,listing_price_max:,listing_price_min:,lot_sq_feet:,min_bedrooms:,min_full_baths:,min_garage_spaces:,num_mfr_units:,percent_reduced:,year_built_from:,year_built_to://,cookieStr=UrlFetchApp.fetch("http://www.ziprealty.com/homes/for-sale/search/sandiego/proximity",{/*followRedirects:false,/*method:"post",payload:{email:"email@example.com",password:"pswd"},headers:{Cookie:cookie}*/}).getAllHeaders()["Set-Cookie"]//,cookieObj=LibraryjsUtil.cookieParse(cookieStr)//,cookie=LibraryjsUtil.cookieStringify(cookieObj)
    , cookie    = /*zipRealty_getCookies()*/ // "JSESSIONID=BA209B7CE0AA1A9BC4EBF40A27AF76C4.vwapp7b;" // GAS
                                             // "JSESSIONID=FBF9A210A151799E707ACE27126D8B6B.vwapp4b;" // POSTER
                                                "JSESSIONID=9F2E624165E3EB003C5CBD1C95DADAE5.vwapp7b;" // CHROME DEVELOPER //**  Note: We paused development here. We could not get the scripted URL fetch to return successfully. We think the session IDs (cookies, JSESSIONID, website_user_id, etc.) is the problem. Now we must search manually, then copy the html source of the returned search results and paste them into the spreadsheet; then scrape the spreadsheet.
                                             // "JSESSIONID=608EE08150C51D9FAD31564AB8D4169A.vwapp2b; Domain=.ziprealty.com; Path=/; HttpOnly, website_user_id=431427847;" // LOCAL
    // Logger.log(UrlFetchApp.fetch("http://www.ziprealty.com/homes/for-sale/search/sandiego/proximity",{method:"post",payload:payload/*,headers:{Cookie:cookie}*/}).getAllHeaders()["Set-Cookie"])
    , data   // = UrlFetchApp.fetch("http://www.ziprealty.com/homes-for-sale/search-results/sandiego/detailed",{method:"get",headers:{Cookie:cookie}}).getContentText()
             // = UrlFetchApp.fetch("http://www.ziprealty.com/homes/for-sale/search/sandiego/saved?action=search&home_search_id=58631364")            .getContentText() // KEYWORD — SAN DIEGO
                = scrape_zipRealty_ss() // Fetch data from spreadsheet temporarily until we can automate the fetching process
	; /*Logger.log* /print_test(/*JSON.stringify(* /data/*cookie* /);*/return data}
function zipRealty_scrapeList(str,inCity,inState){str=str||zipRealty_fetchList();inCity=inCity||"San-Diego";inState=inState||"CA";var i,data=[],out=[] // @return{arr[ob]} — Array of properties/situs as objects from parsed string // @param{str} — List html doc returned from search
    ,   KEY = [ , "mlsNumber_1"  , "mlsName" , "isForeclosure"   , "link_detail_1" , "link_photo"                           , "numOfPhotos" , "ask"             , "link_detail_2" , "sa"      , "csz"  , "nhood_1"      , "nhood_2" , "beds"    , "baths"   , "useCode" , "sqft"    , "psf"     , "lot"     , "yrBuilt" , "ageInDays" , "foo"                              , "comments_1" , "comments_2" ]
    ,   QUE = [ , "name="        , "value="  , "<div "           , "href="         , "PhotoUtil.setAndResizeImageOverflow(" , "strong"      , "font-list-price" , "href="         , "<strong" , "<div" , "Neighborhood" , " "       , "<strong" , "<strong" , "<strong" , "<strong" , "<strong" , "<strong" , "<strong" , "<strong"   , "toggle_div__parent--height-trans" , "<div "      , "<div "      ]
    ,   BEG = [ , "\""           , "\""      , "photobox--180__" , "\""            , "'"                                    , ">"           , "<strong>"        , "\""            , ">"       , ">"    , ":"            , ">"       , ">"       , ">"       , ">"       , ">"       , ">"       , ">"       , ">"       , ">"         , " "                                , ">"          , ">"          ]
    ,   END = [ , "\""           , "\""      , "\""              , "\""            , "'"                                    , " Photos"     , "<"               , "\""            , "<"       , "<"    , "\""           , "<"       , "<"       , "<"       , "<"       , "<"       , "<"       , "<"       , "<"       , "<"         , ">"                                , "<"          , "<"          ]
	,   arr=str.split("show-on-hover__parent results-row").slice(1);i=arr.length;while(i--){
	                                 data[i] = LibraryjsUtil._scrapeDataset(arr[i],KEY,QUE,BEG,END,["$",",","%"],["","",""],true);
                              /*     data[i].isPriceReduced = (arr[i].indexOf("i-price-reduced"  )>-1);
                                     data[i].isForeclosure  = (arr[i].indexOf("badge-foreclosure")>-1);
                                     data[i].isBankOwned    = (arr[i].indexOf("badge-bank-owned" )>-1);//Logger.log(isForeclosure);Logger.log(isPriceReduced);Logger.log(isBankOwned);}
      /* Special Processing */ //try{data[i].sa             = LibraryjsUtil.toCaseTitle(data[i].sa                           );}catch(e){Logger.log(e.message)}
                               //try{data[i].city           = LibraryjsUtil.toCaseTitle(data[i].city                         );}catch(e){Logger.log(e.message)}
	                             if (data[i].beds          != data[i].beds*1){data[i].ageInDays=data[i].lot;data[i].yrBuilt=data[i].psf;data[i].lot=data[i].sqft;data[i].psf=data[i].useCode;data[i].sqft=data[i].baths;data[i].useCode=data[i].beds;data[i].baths="";data[i].beds="";} // Adjusts for intermittent missing field data // Shifts field results
								 try{data[i].useCode        = LibraryjsUtil.convrepl(data[i].useCode,{"CND/TWN":"C/T"/*,"Commercial":"CRE","Multifamily":"MUL","Hospitality":"CRE"*/},data[i].useCode);}catch(e){Logger.log(e.message)}
                                 try{data[i].mlsNumber_2    =                        data[i].mlsName  .split("|")[0]          ;}catch(e){Logger.log(e.message)}
                                 try{data[i].mlsName        =                        data[i].mlsName  .split("|")[1]          ;}catch(e){Logger.log(e.message)}
                                 try{data[i].ageInDays      =                        data[i].ageInDays.split(" ")[0]          ;}catch(e){Logger.log(e.message)}
                                 try{data[i].ask_high       =                        data[i].ask      .split("-")[1].trim()   ;}catch(e){Logger.log(e.message);data[i].ask_high="";}
                                 try{data[i].ask            =                        data[i].ask      .split("-")[0].trim()   ;}catch(e){Logger.log(e.message)}
                                 try{data[i].isForeclosure  = (data[i].isForeclosure == "foreclosure")                        ;}catch(e){Logger.log(e.message)}
                                 try{data[i].isShortSale    = (data[i].ask_high       >  0)                                   ;}catch(e){Logger.log(e.message)}
                      //   /*out[i]*/data[i].isRaw=true;data[i].source={name:"ZipRealty"/*,data:data[i]*/};data[i].market={city:inCity,state:inState}; // Moved to scrape_zipRealty_ss2details() because here, could not read object from (flat) ss field and under zipRealty_scrapeDetail(act,pre), was under root.detail instead of at root.
                                    }/*print_test(/ * /Logger.log(JSON.stringify(data));*/return /*out*/data}
function zipRealty_scrapeDetail(act){act="http://www.ziprealty.com"+act; //act=act||"http://www.ziprealty.com/property/3130-LOGAN-AVE-SAN-DIEGO-CA-92113/10509683/detail";
    var KEY = [ , "title_1" , "canonical" , "title_2"    , "link_photo_1" , "link_photo_2"       , "link_detail_1" , "siteName"     , "og_type"    , "latitude"    , "longitude"    , "sa"                , "city"        , "state"      , "zip"            , "country"         , "itemprop_name"     , "link_detail_2"    , "link_requestShowing" , "link_like"  , "neighborhood_1"  , "neighborhood_2" , "schoolDistrict_1"    , "schoolDistrict_2" /* , "corePropDetails"         , "beds"    , "baths"   , "type"    , "sqft"    , "yrBuilt" , "link_photo_3"              , "listIdOb_1" , "listIdOb_2"                   , "lot"              */ , "latestUpdate"         , "ageInDays"                    , "listDate" , "psf"               , "link_estPmt"                          , "estPmt" , "mlsSource_1" , "mlsNumber_1" , "status"  , "views"  , "popularity"  , "foo"     , "comments" , "listIdOb_3"                   , "mlsNumber_2"        , "mlsSource_2"        /* , "foo"               , "foo"      , "laundry" , "foo"      , "kitchen" , "foo"           , "kitchenDim" , "foo"               , "livingRmDim" , "foo"             , "masterBrDim" , "foo"      , "parking" , "foo"     , "siding" , "foo"              , "lotDescription" , "foo"        , "roofType" , "foo"           , "countOfStories" , "foo"            , "storiesDesc" , "foo"       , "lotSize" , "foo"      , "heating" , "foo"    , "water" , "foo"    , "sewer" , "foo"              , "schoolDistrict_3" , "foo"     , "county" , "foo"                , "propertySubType" , "foo"                   , "tractOrSubdivision" , "foo"           , "crossStreet" , "foo"          , "assessments" */ , "foo"          , "listedBy" , "foo"                    , "link_avm"               , "pH"                     , "link_schoolDistrict" , "schoolDistrict_4" , "schoolScore"    , "schoolDistrict_5" , "link_schoolsNearby"                          , "foo"                       , "foo"  , "pub_beds" , "foo"        , "pub_bathsFull" , "foo"           , "pub_bathsPartial" , "foo"           , "pub_propertyType" , "foo"     , "pub_sqft" , "foo"      , "pub_lot" , "foo"        , "pub_yrBuilt" , "foo"  , "pub_zip" , "foo" , "pub_apn" , "foo"    , "pub_source" ]
    ,   QUE = [ , "<title"  , "canonical" , "og:title"   , "og:image"     , "itemprop=\"image\"" , "og:url"        , "og:site_name" , "og:type"    , "og:latitude" , "og:longitude" , "og:street-address" , "og:locality" , "og:region"  , "og:postal-code" , "og:country-name" , "itemprop=\"name\"" , "itemprop=\"url\"" , "IFPC.show("          , "IFPC.show(" , "class=\"nHood\"" , " "              , "class=\"sDistrict\"" , " "                /* , "id=\"corePropDetails\""  , "<strong" , "<strong" , "<strong" , "<strong" , "<strong" , "ZipRealty.photos.MLSPhoto" , "var home "  , "javascript:showSaveHomePanel" , ">Lot&nbsp;Size:<" */ , "last_updated_tooltip" , "Days&nbsp;on&nbsp;ZipRealty:" , "Listed:"  , "Price/sq&nbsp;ft:" , "Estimated&nbsp;Monthly&nbsp;Payment:" , ">"      , "Source:"     , "MLS&nbsp;#:" , "Status:" , "Views:" , "Popularity:" , ">Print<" , "<span "   , "javascript:showSaveNotePanel" , "name=\"mlsNumber\"" , "name=\"mlsSource\"" /* , "Interior Features" , "Laundry:" , "<td "    , "Kitchen:" , "<td "    , "Kitchen Dim.:" , "<td "       , "Living Room Dim.:" , "<td "        , "Master BR Dim.:" , "<td "        , "Parking:" , "<td "    , "Siding:" , "<td "   , "Lot Description:" , "<td "           , "Roof Type:" , "<td "     , "# of Stories:" , "<td "           , "Stories Desc.:" , "<td "        , "Lot Size:" , "<td "    , "Heating:" , "<td "    , "Water:" , "<td "  , "Sewer:" , "<td "  , "School District:" , "<td "             , "County:" , "<td "   , "Property Sub-type:" , "<td "            , "Tract or Subdivision:" , "<td "               , "Cross Street:" , "<td "        , "Assessments:" , "<td "        */ , "courtesy of:" , "<td "     , "price-estimates-widget" , "price-estimates-widget" , "class=\"pricehistory\"" , "School District:"    , ""                 , "icoSchoolScore" , "School District:" , "document.getElementById(\"schools-widget\")" , "Public Record Information" , "Beds" , "<td "     , "Full Baths" , "<td "          , "Partial Baths" , "<td "             , "Property Type" , "<td "             , "Sq. Ft." , "<td "     , "Lot Size" , "<td "    , "Year Built" , "<td "        , "FIPS" , "<td "    , "APN" , "<td "    , "Source" , "<td "       ]
    ,   BEG = [ , ">"       , "href=\""   , "content=\"" , "content=\""   , "content=\""         , "content=\""    , "content=\""   , "content=\"" , "content=\""  , "content=\""   , "content=\""        , "content=\""  , "content=\"" , "content=\""     , "content=\""      , "content=\""        , "content=\""       , "\'"                  , "\'"         , "Neighborhood:"   , ">"              , "title=\""            , ">"                /* , ">"                       , ">"       , ">"       , ">"       , ">"       , ">"       , "\'"                        , "="          , "("                            , "<dd>"             */ , ">"                    , "<dd>"                         , "<dd>"     , "<dd>"              , "href=\""                              , "$"      , "<dd>"        , "<dd>"        , "<dd>"    , "<dd>"   , " "           , "<div "   , ">"        , "("                            , "value=\""           , "valuehref=\""             , ">"                , ">"              , ">"                , "\'"                                          , "<"                         , "<"    , ">"        , "<"          , ">"             , "<"             , ">"                , "<"             , ">"                , "<"       , ">"        , "<"        , ">"       , "<"          , ">"           , "<"    , ">"       , "<"   , ">"       , "<"      , ">"          ]
    ,   END = [ , "<"       , "\""        , "\""         , "\""           , "\""                 , "\""            , "\""           , "\""         , "\""          , "\""           , "\""                , "\""          , "\""         , "\""             , "\""              , "\""                , "\""               , "\'"                  , "\'"         , "\""              , "<"              , "\""                  , "<"                /* , "</div>"                  , "<"       , "<"       , "<"       , "<"       , "<"       , "\'"                        , ";"          , ")"                            , " "                */ , "<"                    , "<"                            , "<"        , "<"                 , "\""                                   , "<"      , "<"           , "<"           , "<"       , "<"      , "\""          , "</div>"  , "<"        , ")"                            , "\""                 , "\""                 /* , ">"                 , "</td>"    , "<"       , "</td>"    , "<"       , "</td>"         , "<"          , "</td>"             , "<"           , "</td>"           , "<"           , "</td>"    , "<"       , "</td>"   , "<"      , "</td>"            , "<"              , "</td>"      , "<"        , "</td>"         , "<"              , "</td>"          , "<"           , "</td>"     , "<"       , "</td>"    , "<"       , "</td>"  , "<"     , "</td>"  , "<"     , "</td>"            , "<"                , "</td>"   , "<"      , "</td>"              , "<"               , "</td>"                 , "<"                  , "</td>"         , "<"           , "</td>"        , "<"           */ , "</td>"        , "<"        , ">"                      , "'"                      , "</table>"               , "\""                  , "<"                , "<"              , "<"                , "\'"                                          , ">"                         , ">"    , "<"        , ">"          , "<"             , ">"             , "<"                , ">"             , "<"                , ">"       , "<"        , ">"        , "<"       , ">"          , "<"           , ">"    , "<"       , ">"   , "<"       , ">"      , "<"          ]
	try{var str=UrlFetchApp.fetch(act).getContentText()}catch(e){Logger.log(e.message);return} //Logger.log(act);}
	                             var out                = LibraryjsUtil._scrapeDataset(str,KEY,QUE,BEG,END,["$",",","%"],["","",""],true);
	  /* Special Processing * /  try{out.propertyType   = LibraryjsUtil.convrepl   (out.propertyType,{"Single Family Home":"SFR"/*,"Commercial":"CRE","Multifamily":"MUL","Hospitality":"CRE"* /},arr[i].propertyType);             }catch(e){Logger.log(e.message)}
                                 try{out.sa             = LibraryjsUtil.toCaseTitle(out.sa  );                                                                                                                                      }catch(e){Logger.log(e.message)}
                                 try{out.city           = LibraryjsUtil.toCaseTitle(out.city);                                                                                                                                      }catch(e){Logger.log(e.message)}
                                 try{out                = {isRaw:true,source:{name:"Realtor",data:data[i]},market:{city:inCity,state:inState}};                                                                                     }catch(e){Logger.log(e.message)}
                             */  try{out.avm            = zipRealty_scrapeAvm(out.link_avm);                                                                                                                                    }catch(e){Logger.log(e.message)}
                                 try{out.pH             = out.pH.replace(/( |\n|<\/tr>|<\/th>|<\/td>|<strong>|<\/strong>|<spanclass=\"zRed\">|<\/span>)/g,"");                                                                      }catch(e){Logger.log(e.message)}
                                 try{out.priceHistory   = function(){var i,ar=out.pH.split("<tr>");ar.shift();ar[0]=ar[0].split("<th>");ar[0].shift();i=ar.length;while(i---1){ar[i]=ar[i].split("<td>");ar[i].shift();}return ar}()}catch(e){Logger.log(e.message)}
								 /*print_test(JSON.stringify(out));* /Logger.log(JSON.stringify(out));*/return out}
function zipRealty_scrapeAvm(act){act="http://www.ziprealty.com"+act; //act=act||"http://www.ziprealty.com/property/async/avm?addressId=10509683&lp=199900"; // AVM is AJAX call at/from source
    var KEY = [ , /* "link_pricingTool" , */ "avmEst_smartZip"            , "avmEst_zillow"            , "avmEst_eppraisal"            ]
    ,   QUE = [ , /* "href"             , */ "avm-chart-series--resprice" , "avm-chart-series--zillow" , "avm-chart-series--eppraisal" ]
    ,   BEG = [ , /* "\""               , */ "$"                          , "$"                        , "$"                           ]
    ,   END = [ , /* "?"                , */ "<"                          , "<"                        , "<"                           ]
    ;   try{var str=UrlFetchApp.fetch(act).getContentText()}catch(e){Logger.log(e.message);return}//Logger.log(act);Logger.log(str);
	                             var out = LibraryjsUtil._scrapeDataset(str,KEY,QUE,BEG,END,["$",",","%"],["","",""],false);
        /* Special Processing */                                          try{out.avmEst_zillow    =                  out.avmEst_zillow   .replace("K","000") }catch(e){Logger.log(e.message)}
		                                                                  try{out.avmEst_smartZip  =                  out.avmEst_smartZip .replace("K","000") }catch(e){Logger.log(e.message)}
                                                                          try{out.avmEst_eppraisal =                  out.avmEst_eppraisal.replace("K","000") }catch(e){Logger.log(e.message)}
							  try{if(out.avmEst_zillow   .search("M")>-1){try{out.avmEst_zillow    = 1000000 * Number(out.avmEst_zillow   .replace("M",""   ))}catch(e){Logger.log(e.message)}}}catch(e){Logger.log(e.message)}
							  try{if(out.avmEst_smartZip .search("M")>-1){try{out.avmEst_smartZip  = 1000000 * Number(out.avmEst_smartZip .replace("M",""   ))}catch(e){Logger.log(e.message)}}}catch(e){Logger.log(e.message)}
							  try{if(out.avmEst_eppraisal.search("M")>-1){try{out.avmEst_eppraisal = 1000000 * Number(out.avmEst_eppraisal.replace("M",""   ))}catch(e){Logger.log(e.message)}}}catch(e){Logger.log(e.message)}
        var arr=[],k=Object.keys(out),i=k.length;while(i--){if(out[k[i]]==1*out[k[i]]){arr.push(out[k[i]])}}
		                         try{out.estimate = Math.round(LibraryjsUtil._descriptiveStatistics(arr).Median)}catch(e){Logger.log(e.message)}
                                 /*print_test(JSON.stringify(out));* /Logger.log(JSON.stringify(out));*/return out}
function zipRealty_scrapeEmail(){ // Scrape email from Zip Realty @ziprealty.com of new property listings // @return{arr[ob]} — Array of properties/situs as objects from parsed string
    function getZipDetailUrl(fstr){//fstr=fstr||"2Fproperty2F4410-DELTA-ST-_UNIT_28-SAN-DIEGO-CA-921132F97536712Fdetail"
            fstr                  = fstr                 .replace( /^2Fproperty2F/ , "/property/" )
                                                         .replace(  /2Fdetail$/    , "/detail"    )
        var farr1                 = fstr                 .split  ( "/"                            )
          , farr2                 = farr1[2]             .split  ( "-"                            )
          ; farr2[farr2.length-1] = farr2[farr2.length-1].replace( "2F"            , "/"          )
          ; farr1[2]              = farr2                .join   ( "-"                            )
          ; fstr                  = farr1                .join   ( "/"                            )
          ; /*Logger.log(str);*/return fstr}
	var i,data=[],out=[],str=GmailApp.search("subject:'New listings that match your search: Foreclosure — San Diego'")[0].getMessages()[0].getBody()//;print_test(str);
    ,   KEY = [ , "link_detail_redirect_1" , "sa"      , "csz"  , "ask"     , "link_detail_redirect_2" , "link_detail_redirect_3" , "link_photo" , "foo"   , "beds"    , "foo"    , "sqft"    , "foo"    , "baths"   , "foo"       , "lot"     , "foo"       , "ptBaths" , "foo"   , "useCode" ]
    ,   QUE = [ , "href="                  , "<strong" , "<br>" , "<strong" , "<table "                , "href="                  , "src="       , "Beds:" , "<strong" , "Sq ft:" , "<strong" , "Baths:" , "<strong" , "Lot Size:" , "<strong" , "Pt Baths:" , "<strong" , "Type:" , "<strong" ]
    ,   BEG = [ , "\""                     , ">"       , ">"    , ">"       , "href=\""                , "\""                     , "\""         , "<td "  , ">"       , "<td "   , ">"       , "<td "   , ">"       , "<td "      , ">"       , "<td "      , ">"       , "<td "  , ">"       ]
    ,   END = [ , "\""                     , "<"       , "<"    , "<"       , "\""                     , "\""                     , "\""         , ">"     , "<"       , ">"      , "<"       , ">"      , "<"       , ">"         , "<"       , ">"         , "<"       , ">"     , "<"       ]
	;   str=str.split("EMAIL")[1];var arr=str.split("visit_button").slice(/*1*/0,-1);i=arr.length;while(i--){
	                                 data[i]             = LibraryjsUtil._scrapeDataset(arr[i],KEY,QUE,BEG,END,["$",",","%"],["","",""],true);
      /* Special Processing */   try{data[i].useCode     = LibraryjsUtil.convrepl ( data[i].useCode,{"Single Family":"SFR","Condo/Townhouse":"C/T"/*,"Commercial":"CRE","Multifamily":"MUL","Hospitality":"CRE"*/},data[i].useCode);}catch(e){Logger.log(e.message)}
                                 try{data[i].link_detail = getZipDetailUrl        ( data[i].link_detail_redirect_1.split("=")[1] ) }catch(e){Logger.log(e.message)}
								 try{data[i].     detail = zipRealty_scrapeDetail ( data[i].link_detail                          ) }catch(e){Logger.log(e.message)}
                      // /*out[i]* / data[i].isRaw=true;data[i].source={name:"ZipRealty"/*,data:data[i]* /};data[i].market={city:inCity,state:inState}; // Moved to scrape_zipRealty_ss2details() because here, could not read object from (flat) ss field and under zipRealty_scrapeDetail(act,pre), was under root.detail instead of at root.
                                    }/*print_test(/ */Logger.log(JSON.stringify(data));return /*out*/data}
function zipRealty_appendRecord(ob){
    ob.isRaw=true;ob.table="situs";ob.source={name:"ZipRealty"/*,data:ob*/};/*ob.market={city:inCity,state:inState};*/try{ob.ratio=Math.round(100*ob.ask/ob.detail.avm.estimate);}catch(e){Logger.log(e.message)}
    if(!db.query({mlsName:ob.mlsName,mlsNumber_2:ob.mlsNumber_2}).getSize()){r=db.load(db.save(ob).getId());r.item=LibraryjsUtil.toBase62(Number(r.getId().slice(1)));db.save(r)}}
// Imported and adapted from Google Backup — Scrape — Note Inventory Sources.04.js — fciEx section (due to similar data structure, i.e. copy/paste html doc source code)
// Step 1 of 3 // Manually copy HTML source code from zipRealty auto search/query; Paste source code into SS page named “Source”; Use top row only, start at first column and paste each page on a separate cell moving from left to right across the page in row one
function scrape_zipRealty_ss        (){ // Step 2 of 3 // 1. Fetch manually posted raw data from SS page named “Source” | 2. Scrape on list page at source | 3. Post to SS page named “Scraped”
    var ss=SpreadsheetApp./*getActiveSpreadsheet()*/openByUrl("https://docs.google.com/spreadsheet/ccc?key=0AlLVOoV_2dFtdGhYUWRRNFB0Z1JMeENETk1McnFJWHc#gid=0"),sheetIn=ss.getSheetByName("Source"),rangeIn=sheetIn.getRange(1,1,1,3),datarr=rangeIn.getValues()[0];//Logger.log(* /print_test(JSON.stringify(datarr));
    var out,scraped=[],i=datarr.length;while(i--){scraped[i]=zipRealty_scrapeList(datarr[i])}out=LibraryjsUtil.ao2aa(LibraryjsUtil._flatten(scraped));//Logger.log(out);
    var rangeOut,sheetOut=ss.getSheetByName("Scraped");sheetOut.insertRowsAfter(sheetOut.getMaxRows()-1,out.length);rangeOut=sheetOut.getRange(sheetOut.getLastRow()+1,1,out.length,out[0].length);rangeOut.setValues(out);return}
function scrape_zipRealty_ss2details(){var r,db=ScriptDb.getMyDb(),sheetIn=SpreadsheetApp./*getActiveSpreadsheet()*/openByUrl("https://docs.google.com/spreadsheet/ccc?key=0AlLVOoV_2dFtdGhYUWRRNFB0Z1JMeENETk1McnFJWHc#gid=0").getSheetByName("Scraped"),rangeIn=sheetIn.getRange(1,1,2,sheetIn.getLastColumn()),datarr=rangeIn.getValues(),datob=LibraryjsUtil.aa2ao(datarr)[0];datob.detail=zipRealty_scrapeDetail(datob.link_detail_1);/*Logger.log(datob);*/zipRealty_appendRecord(datob);sheetIn.deleteRow(2);return} // if(/*scrape_serverPost(datob,scraped,"36sgd2m257w2j0sn5isa") // var x=UrlFetchApp.fetch("https://script.google.com/macros/s/AKfycbwT66_MExluhggRGS48QQikDxTzElT7F1WWRImBHoKDqEjFdIs/exec",{method:"post"});Logger.log(x.getResponseCode());Logger.log(x.getContentText());}
// The data collection procedure includes the following three modes. When we do a search all, we can sort the results by ID which is numerically chronological.
// We need to scrape the list pages to get the detail page URLs. So when scraping the initial batch, we load all the list results into a spreadsheet, then scrape each SS row individually for details.
// The second mode is ongoing maintenance whereby we set a 15 minute trigger to test for by searching the existence of the next ID in sequence. If the search returns a hit, we scrape the list page then immediately scrape for details.
// The final mode checks for the existence of a given product ID upon receipt of a bid or indicative offer by the client’s server. This is to see if the asset has been sold between the scrape and the bid.
function scrape_zipRealty_getMode1(){while(true){try{scrape_zipRealty_ss2details()}catch(e){Logger.log(e.message);break;}}} // Step 3 of 3 // 1. Fetch details from SS (individually, one at-a-time) | 2. Write to server // Manually populate by batch // Step 1 of 3 // 1. Identify latest scraped ID | 2. Find unscraped IDs at source | 3. Manually copy from the source and paste to the SS page named “Source” // Step 2 of 3: Execute scrape_fciEx_ss() (If updating, set rangeIn columns to 1) // Step 3 of 3: Execute scrape_fciEx_ss2details() via executing this function
function scrape_zipRealty_getMode2(){ // Automatically update/populate individually, on a schedule // 1. Check latest record ID, increment by one, search by product ID | 2. Scrape list data + details URL | 3. Scrape details. | 4. Store ID for repeat cycle to follow
    while(true){var db=ScriptDb.getMyDb(),r=db.query({table:"counter",source:"fciEx"}).next();Logger.log(JSON.stringify(r)); 
                var dataList   = zipRealty_scrapeList(UrlFetchApp.fetch("http://www.fciexchange.com/all-loans.php?prodId="+(++r.value)).getContentText())[0]//;Logger.log(dataList);
                  , dataDetail = scrape_zipRealty_detail(dataList.link_details);/*Logger.log(dataDetail);*/scrape_serverPost(dataList,dataDetail,"36sgd2m257w2j0sn5isa");db.save(r/*{table:"counter",source:"fciEx",value:13108}*/)}}
function scrape_zipRealty_getMode3(){ // Verify for sale at any time, on demand, after bid is made
}
// --------------------------- INCOMING DATA SOURCE: SCRAPE : HOMEPATH.COM ---------------------------
// http://www.homepath.com/listing/search?q=Los+Angeles%2C+CA&pi=&pa=&bdi=&bhi=&x=31&y=10
// --------------------------- INCOMING DATA SOURCE: SCRAPE : REALTOR.COM ---------------------------
function realtorScrape(inState,inCity){//var inState=inState||"CA",inCity=inCity||"San-Diego";//Not case-sensitive//Returns array of situs objects from Realtor.com foreclosure MLS listings//URL:http://www.realtor.com/foreclosures/San-Diego_CA/sby-1/pg-2?pgsz=200//Alt URL:act="http://www.realtor.com/search/searchresults.aspx?sby=1&pgsz=10&loc=phoenix%2c+az&pr=false&status=foreclosures&pg=1"; // var LOAD=["https://sites.google.com/site/itr5k9zw23yzmxuaf5nb399c0ywb98/home/jsLoad.js","googleScripts"];eval(UrlFetchApp.fetch(LOAD[0]).getContentText());var files=load(LOAD[1]);var i=files.length;while(i---1){eval(UrlFetchApp.fetch(files[i]).getContentText())} // Notes: For scraping page-by-page, need to determine 3rd argument (token) in scrape function. Hopefully, this will work at least until scrape volume reaches 200 and we need to paginate.
    var i,str,data=[],out=[],act="http://www.realtor.com/foreclosures/"+inCity+"_"+inState+"/type-single-family-home"+"/sby-1"/*+"/pg-"+(++pg)*/+"?ml=4&pgsz=200" // "http://www.realtor.com/foreclosures/San-Diego_CA/type-single-family-home/sby-1?ml=4&pgsz=200"
    ,   KEY = [ , "link" , "address_long_1" , "link_photo" , "address_long_2" , "sa"                     , "city"         , "state"          , "zip"            , "latitude"   , "longitude"  , "listingPrice"  , "beds"         , "baths"         , "sqft"         , "lot"          , "propertyType"          , "brokeredBy"          ]
    ,   QUE = [ , "href" , "title"          , "src"        , "alt"            , "listing-street-address" , "listing-city" , "listing-region" , "listing-postal" , "latitude"   , "longitude"  , "listing-price" , "listing-beds" , "listing-baths" , "listing-sqft" , "listing-sqft" , "listing-property-type" , "listing-brokered-by" ]
    ,   BEG = [ , "\""   , "\""             , "\""         , "\""             , ">"                      , ">"            , ">"              , ">"              , "content=\"" , "content=\"" , "$"             , "<em>"         , "<em>"          , "<em>"         , "<em>"         , ">"                     , ":"                   ]
    ,   END = [ , "\""   , "\""             , "\""         , "\""             , "<"                      , "<"            , "<"              , "<"              , "\""         , "\""         , "<"             , "<"            , "<"             , "<"            , "<"            , "<"                     , "\""                  ]
    ;   try{str=UrlFetchApp.fetch(act).getContentText()}catch(e){Logger.log(e.message);return} //Logger.log(act);}
	var arr=str.split("listing-wrap").slice(5);i=arr.length;while(i--){data[i]                = LibraryjsUtil._scrapeDataset(arr[i],KEY,QUE,BEG,END,["$",",","%"],["","",""],true);
                                                                       data[i].isPriceReduced = (arr[i].indexOf("i-price-reduced"  )>-1);
                                                                       data[i].isForeclosure  = (arr[i].indexOf("badge-foreclosure")>-1);
                                                                       data[i].isBankOwned    = (arr[i].indexOf("badge-bank-owned" )>-1);//Logger.log(isForeclosure);Logger.log(isPriceReduced);Logger.log(isBankOwned);}
							              /* Special Processing */ try{data[i].propertyType   = LibraryjsUtil.convrepl   (data[i].propertyType,{"Single Family Home":"SFR"/*,"Commercial":"CRE","Multifamily":"MUL","Hospitality":"CRE"*/},arr[i].propertyType);}catch(e){Logger.log(e.message)}
                                                                   try{data[i].sa             = LibraryjsUtil.toCaseTitle(data[i].sa                                                                                                                          );}catch(e){Logger.log(e.message)}
                                                                   try{data[i].city           = LibraryjsUtil.toCaseTitle(data[i].city                                                                                                                        );}catch(e){Logger.log(e.message)}
                                                                        out[i]                = {isRaw:true,source:{name:"Realtor",data:data[i]},market:{city:inCity,state:inState}};
                                                                      }/*print_test(JSON.stringify(out));/*Logger.log(JSON.stringify(out));*/return out}
function realtorScrape_call(city,state){db=ScriptDb.getMyDb(),arr=realtorScrape("San-Diego","CA");/*Logger.log(arr)*/db.saveBatch(arr,false);return}
function realtorAddAvm(){var db=ScriptDb.getMyDb(),r,q,results=db.query({isRaw:true});while(results.hasNext()){r=results.next();q=LibraryjsAvm.avmJson(r);q.item=LibraryjsUtil.toBase62(Number(r.getId().slice(1)));db.save(q);db.remove(r);}} // Add this function on a trigger (e.g. 10 minutes) when sourcing from Realtor.com
// Instructions: To load db with data, 1. Run realtorScrape_call(city,state); 2. Run realtorAddAvm();
// ============================== IMPORTED and ADAPTED FROM DEALDIGGER™ ==============================
// ----------------------- Code.gs -----------------------
//function doPost(e){return x.y();}
//function doGet(){return ContentService.createTextOutput("Hello World").setMimeType(ContentService.MimeType.TEXT)}
//function doGet(e){ // References: https://developers.google.com/apps-script/guides/html-service-communication#private_functions // https://sites.google.com/site/appsscripttutorial/miscellaneous/creating-form-elements-dynamically-using-google-apps-script-gas
 // if(e && e.parameter && e.parameter.jsoncallback){return ContentService.createTextOutput("foo({result:'<strong>Hello</strong> World'});").setMimeType(ContentService.MimeType.TEXT);}
function doGet(e){ // References: https://developers.google.com/apps-script/guides/html-service-communication#private_functions // https://sites.google.com/site/appsscripttutorial/miscellaneous/creating-form-elements-dynamically-using-google-apps-script-gas
    if(e && e.parameter && e.parameter.k){var k=e.parameter.k,m=e.parameter.m,p=e.parameter;switch(k){
            case   /* test                  */ "uy8mi25thrp8t2l0zt7y" : return ContentService.createTextOutput("Hello World"                                                                                                                                                                                                                                                                               ).setMimeType(ContentService.MimeType.  TEXT /*JSON*/           );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
			case   /* buyer register        */ "fruif01iaqqdgmqq1glu" : return ContentService.createTextOutput(e.parameter.jsoncallback+"({'result':'<div style=\"overflow:hidden\"><iframe scrolling=\"no\"   style=\"xmargin-top:-200px;width:100%;height:1200px;\" src=\"https://sites.google.com/site/dealdiggeronline/parties/buyer/register-buyer#sites-canvas-main-content\"    ></iframe></div>'})").setMimeType(ContentService.MimeType./*TEXT */JSON             );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* buyer serve Realtor   */ "9l4y95xhwwi8q2hbkslp" : return ContentService.createTextOutput(e.parameter.    callback+"(" + JSON.stringify(serveBuyers_realtor   ( )) + ")"                                                                                                                                                                                                              ).setMimeType(ContentService.MimeType./*TEXT* /JSON*/JAVASCRIPT );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* buyer serve ZipRealty */ "5rmywv9gdz0e5mlnoeye" : return ContentService.createTextOutput(e.parameter.    callback+"(" + JSON.stringify(serveBuyers_zipRealty ( )) + ")"                                                                                                                                                                                                              ).setMimeType(ContentService.MimeType./*TEXT */JSON             );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* buyer receive         */ "2kpco3hg68eo6alklck6" : return                                                                   /* x.y() */ receiveBuyer          (p)                                                                                                                                                                                                                                                                                      ;break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* agent serve Realtor   */ "q82jtqjv098lh1y1n1f4" : return ContentService.createTextOutput(e.parameter.    callback+"(" + JSON.stringify(serveAgents_realtor   ( )) + ")"                                                                                                                                                                                                              ).setMimeType(ContentService.MimeType./*TEXT */JSON             );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* agent serve ZipRealty */ "s312dywjhqj8flzzg350" : return ContentService.createTextOutput(e.parameter.    callback+"(" + JSON.stringify(serveAgents_zipRealty ( )) + ")"                                                                                                                                                                                                              ).setMimeType(ContentService.MimeType./*TEXT */JSON             );break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
            case   /* agent receive         */ "nmpk3kkow3dgri7zwu30" : return                                                                   /* x.y() */ receiveAgent          (p)                                                                                                                                                                                                                                                                                      ;break; // References // http://www.dimpost.com/2012/12/iframe-how-to-display-specific-part-of.html // http://stackoverflow.com/questions/5676672/how-do-i-crop-the-contents-of-an-iframe-to-show-a-part-of-a-page/14004622#14004622
         default                                                      : break;}} 
    if(SitesApp.getActivePage()){var pageName = SitesApp.getActivePage().getName();switch(pageName){
            case   "authorize"             : return authorize                           (                       )                                                  ;break;
			case   "sandbox2"              : return HtmlService.createHtmlOutputFromFile("sandbox2"             ).setSandboxMode(HtmlService.SandboxMode.NATIVE   );break; // Reference: https://developers.google.com/apps-script/guides/html-service-caja#setsandboxmode
         default                           : break;}}}
// ---------------------------------------------------------------- AUTHPAGE ----------------------------------------------------------------
function authorize(){return HtmlService.createHtmlOutput("<div align='center' style='color:#808080;font-family:verdana;color:#1925AF;font-weight:bold;margin-top:15px;'>Authorization successful!<div style='color:#808080;font-size:smaller;font-weight:normal;'>You may now access all features</div><img src='https://lh5.googleusercontent.com/-BIZ7mfp5ckk/TVZR8NYKMKI/AAAAAAAABS0/SR1Pg44rAGs/s1600/checkmark1.jpg'></div>")}
// ------------------------------------------------------------------ DEALS -------------------------------------------------------------------
function serveBuyers_realtor(){var ob=[],arr=[],i,j,k,r,t=[],zil=[],user=Session.getUser().getEmail(),out={"totalResultsCount":0,"records":[]},db=ScriptDb.getMyDb(),results=db.query({table:"situs",isRaw:false,source:{name:"Realtor"/*"ZipRealty"/*"ChuckWillman"/*"KennethGreen"*/}}).sortBy("avm.stat.ratio",db.ASCENDING/*DESCENDING*/,db.NUMERIC/*LEXICAL*/);while(results.hasNext()){r=results.next();i=out.totalResultsCount++;
	out.records[i]={};try{if(r.avm.dataset.zillow.searchresults.response.results.result){zil[i]=r.avm.dataset.zillow.searchresults.response.results.result}}catch(e){Logger.log(e.message);zil[i]={};} // Shortcut to Zillow results
	try{if(r.bids){arr[i]=r.bids;j=arr[i].length;while(j--){t[j]=0;if(arr[i][j].bidder==user&&(arr[i][j].time>t[j])/*&&(!arr[i][j].confirmed)*/){t[j]=arr[i][j].time;out.records[i].MyBid=arr[i][j].amount}}             }}catch(e){Logger.log(e.message)}; // "MyBid"
	ob[i] = {
		"nolink"                         : {
				"arv"                    : function(){try{return            r.arv                         .value                    }catch(e){Logger.log(e.message);return "";}}() // "arv" Strict input // ARV
			,	"ask"                    : function(){try{return            r.ask                                                   }catch(e){Logger.log(e.message);return "";}}() //
			,	"ask_round"              : function(){try{return Math.round(r.ask                                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst"                : function(){try{return            r.avm.stat.autoEst                                      }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst_round"          : function(){try{return Math.round(r.avm.stat.autoEst                    / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"avmStatSet"             : function(){try{return            r.avm.stat.set                                          }catch(e){Logger.log(e.message);return "";}}() // "avmStatSet" Array of AVM statistics
			,	"baths"                  : function(){try{return            r.avm.combi.baths                                       }catch(e){Logger.log(e.message);return "";}}() //
			,	"beds"                   : function(){try{return            r.avm.combi.beds                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"city"                   : function(){try{return            r.address.city                                          }catch(e){Logger.log(e.message);return "";}}() //
			,	"cof"                    : function(){try{return            r.counter                     .value                    }catch(e){Logger.log(e.message);return "";}}() // "cof" Strict input // Counter
			,	"com"                    : function(){try{return            r.LST_Attributes[21].attribute_value                    }catch(e){Logger.log(e.message);return "";}}() // "com" Strict input // Comments 
			,	"full"                   : function(){try{return            r.address.full                                          }catch(e){Logger.log(e.message);return "";}}() //
			,	"grm"                    : function(){try{return Math.round(r.ask/(12*Number(zil[i].rentzestimate.amount.Text)))    }catch(e){Logger.log(e.message);return "";}}() // "grm" Compute gross rent margin
			,	"ia"                     : function(){try{return            r.incomeApproach                                        }catch(e){Logger.log(e.message);return "";}}() // "ia"  Compute price per income approach
			,	"ia_round"               : function(){try{return Math.round(r.incomeApproach                      / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
            ,   "item"                   : function(){try{return            r.item                                                  }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldPrice"          : function(){try{return            r.avm.combi.lastSoldPrice                               }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldPrice_round"    : function(){try{return Math.round(r.avm.combi.lastSoldPrice             / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldYear"           : function(){try{return            r.avm.combi.lastSoldYear                                }catch(e){Logger.log(e.message);return "";}}() //
			,	"lot"                    : function(){try{return            r.avm.combi.lot.Text                                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"lot_round"              : function(){try{return Math.round(r.avm.combi.lot.Text                  /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"popCount"               : function(){try{return            r.avm.stat.popCount                                     }catch(e){Logger.log(e.message);return "";}}() //
			,	"psf"                    : function(){try{return Math.round(r.ask/*avm.stat.autoEst*//r.avm.combi.sqft)             }catch(e){Logger.log(e.message);return "";}}() // "psf" Compute price per square foot
			,	"ratio"                  : function(){try{return            r.avm.stat.ratio                                        }catch(e){Logger.log(e.message);return "";}}() // "rent"
			,	"rent"                   : function(){try{return Math.round(zil[i].rentzestimate.amount.Text             )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"rent_round"             : function(){try{return Math.round(zil[i].rentzestimate.amount.Text      /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"rep"                    : function(){try{return            r.repairs                     .value                    }catch(e){Logger.log(e.message);return "";}}() // "rep" Strict input // Repairs
			,	"sa"                     : function(){try{return            r.address.sa                                            }catch(e){Logger.log(e.message);return "";}}() //
			,	"sdPct"                  : function(){try{return            r.avm.stat.sdPct                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf"                     : function(){try{return            r.avm.combi.sqft                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf_round"               : function(){try{return Math.round(r.avm.combi.sqft                      /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"state"                  : function(){try{return            r.address.state                                         }catch(e){Logger.log(e.message);return "";}}() //
            ,	"useCode"                : function(){try{return            r.avm.combi.useCode                                     }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxAmt"                 : function(){try{return            r.avm.combi.taxAmt                                      }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxAmt_round"           : function(){try{return Math.round(r.avm.combi.taxAmt                    /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxVal"                 : function(){try{return            r.avm.combi.taxVal                                      }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxVal_round"           : function(){try{return Math.round(r.avm.combi.taxVal                    / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
            ,	"yearBuilt"              : function(){try{return            r.avm.combi.built                                       }catch(e){Logger.log(e.message);return "";}}() //
			,	"zip"                    : function(){try{return            r.address.zip                                           }catch(e){Logger.log(e.message);return "";}}() //
										   }
	,	"link"		                     : {
				"link_boa"               : function(){try{return  /*ok*/    r.link.boa                                              }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_chase"             : function(){try{return  /*ok*/    r.link.chase                                            }catch(e){Logger.log(e.message);return "";}}() //
            ,	"link_eppraisal"         : function(){try{return  /*L1*/    r.avm.dataset.eppraisal.link                            }catch(e){Logger.log(e.message);return "";}}() // Errors: L1 local; L2 site suspected; L3 site confirmed; OK works; ok works but must copy/paste address
			,	"link_googleMap"         : function(){try{return  /*OK*/    r.link.gmap                                             }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_homeGain"          : function(){try{return  /*L3*/    r.avm.dataset.homeGain.link                             }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_homesCom"          : function(){try{return  /*ok*/    r.link.homesCom                                         }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_neighborhoodScout" : function(){try{return  /*ok*/    r.link.neighborhoodScout                                }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_propertyShark"     : function(){try{return  /*ok*/    r.link.propertyShark                                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_realEstate"        : function(){try{return  /*OK*/    r.avm.dataset.realEstate.link                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_realtor"           : function(){try{return  /*OK*/    r.avm.dataset.realtor.link                              }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_trulia"            : function(){try{return  /*OK*/    r.avm.dataset.trulia.link                               }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_yahoo"             : function(){try{return  /*OK*/    r.link.yahoo	   					                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zillow"            : function(){try{return  /*OK*/    r.link.zillow                                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zillowdetails"     : function(){try{return  /*OK*/    zil[i].links.homedetails.Text                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zipRealty"         : function(){try{return            ""                                                      }catch(e){Logger.log(e.message);return "";}}() //            
			,	"link_zipSkinny"         : function(){try{return  /*ok*/    r.link.zipSkinny                                        }catch(e){Logger.log(e.message);return "";}}() //
										   }
	} // db_id MyBid // arv rep cof com city state zip sa useCode beds baths sf sf_round lot lot_round yearBuilt taxVal taxVal_round lastSoldPrice lastSoldPrice_round lastSoldYear taxAmt taxAmt_round ask ask_round autoEst autoEst_round sdPct popCount rent rent_round ratio grm ia ia_round psf avmStatSet // link_googleMap link_yahoo link_zillow link_zillowdetails link_eppraisal link_realtor link_realEstate link_homeGain link_trulia link_propertyShark link_neighborhoodScout link_zipSkinny link_chase link_boa link_homesCom
	var keys=Object.keys(ob[i].nolink),z=keys.length;while(z--){out.records[i][keys[z]]=              ob[i].nolink[keys[z]]                                   }
		keys=Object.keys(ob[i].  link),z=keys.length;while(z--){out.records[i][keys[z]]='<a href="' + ob[i].  link[keys[z]] + '" target="_blank">&#10151;</a>'}Logger.log(JSON.stringify(out.records[i]));
	}return out;}
function serveBuyers_zipRealty(){var ob=[],arr=[],i,j,k,r,t=[],zil=[],user=Session.getUser().getEmail(),out={"totalResultsCount":0,"records":[]},db=ScriptDb.getMyDb(),results=db.query({/*table:"situs",isRaw:true,*/source:{name:"ZipRealty"}}).sortBy("ratio",db.ASCENDING/*DESCENDING*/,db.NUMERIC/*LEXICAL*/);while(results.hasNext()){r=results.next();i=out.totalResultsCount++;//Logger.log(JSON.stringify(r));
    out.records[i]={};try{if(r.bids){arr[i]=r.bids;j=arr[i].length;while(j--){t[j]=0;if(arr[i][j].bidder==user&&(arr[i][j].time>t[j])/*&&(!arr[i][j].confirmed)*/){t[j]=arr[i][j].time;out.records[i].MyBid=arr[i][j].amount}}}}catch(e){Logger.log(e.message)}; // "MyBid"
	ob[i] = {
		"nolink"                         : {
			 	"age"                    : function(){try{return            r.ageInDays                                             }catch(e){Logger.log(e.message);return "";}}() //
			, 	"ask"                    : function(){try{return            r.ask                                                   }catch(e){Logger.log(e.message);return "";}}() //
			, 	"ask_high"               : function(){try{return            r.ask_high                                              }catch(e){Logger.log(e.message);return "";}}() //
			,	"ask_round"              : function(){try{return Math.round(r.ask                                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst"                : function(){try{return            r.detail.avm.estimate                                   }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst_round"          : function(){try{return Math.round(r.detail.avm.estimate                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"baths"                  : function(){try{return            r.baths                                                 }catch(e){Logger.log(e.message);return "";}}() //
			,	"beds"                   : function(){try{return            r.beds                                                  }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"city"                   : function(){try{return            r.address.city                                          }catch(e){Logger.log(e.message);return "";}}() //
			,	"csz"                    : function(){try{return            r.csz                                                   }catch(e){Logger.log(e.message);return "";}}() //
		// 	,	"cof"                    : function(){try{return            r.counter                     .value                    }catch(e){Logger.log(e.message);return "";}}() // "cof" Strict input // Counter
			,	"com"                    : function(){try{return            r.comments_1                                            }catch(e){Logger.log(e.message);return "";}}() // "com" Strict input // Comments 
		//	,	"full"                   : function(){try{return            r.address.full                                          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"grm"                    : function(){try{return Math.round(r.ask/(12*Number(zil[i].rentzestimate.amount.Text)))    }catch(e){Logger.log(e.message);return "";}}() // "grm" Compute gross rent margin
            ,   "item"                   : function(){try{return            r.item                                                  }catch(e){Logger.log(e.message);return "";}}() //
            ,   "isForeclosure"          : function(){try{return            r.isForeclosure                                         }catch(e){Logger.log(e.message);return "";}}() //
            ,   "isShortSale"            : function(){try{return            r.isShortSale                                           }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"lot"                    : function(){try{return            r.lot                                                   }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"popCount"               : function(){try{return            r.avm.stat.popCount                                     }catch(e){Logger.log(e.message);return "";}}() //
			,	"psf"                    : function(){try{return            r.psf                                                   }catch(e){Logger.log(e.message);return "";}}() // "psf" Compute price per square foot
			,	"ratio"                  : function(){try{return            r.ratio                                                 }catch(e){Logger.log(e.message);return "";}}() // "rent"
			,	"sa"                     : function(){try{return            r.sa                                                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf"                     : function(){try{return            r.sqft                                                  }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf_round"               : function(){try{return Math.round(r.sqft                                /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"state"                  : function(){try{return            r.address.state                                         }catch(e){Logger.log(e.message);return "";}}() //
            ,	"useCode"                : function(){try{return            r.useCode                                               }catch(e){Logger.log(e.message);return "";}}() //
            ,	"yearBuilt"              : function(){try{return            r.yrBuilt                                               }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"zip"                    : function(){try{return            r.address.zip                                           }catch(e){Logger.log(e.message);return "";}}() //
										   }
	,	"link"		                     : {}
	} // db_id MyBid // arv rep cof com city state zip sa useCode beds baths sf sf_round lot lot_round yearBuilt taxVal taxVal_round lastSoldPrice lastSoldPrice_round lastSoldYear taxAmt taxAmt_round ask ask_round autoEst autoEst_round sdPct popCount rent rent_round ratio grm ia ia_round psf avmStatSet // link_googleMap link_yahoo link_zillow link_zillowdetails link_eppraisal link_realtor link_realEstate link_homeGain link_trulia link_propertyShark link_neighborhoodScout link_zipSkinny link_chase link_boa link_homesCom
	var keys=Object.keys(ob[i].nolink),z=keys.length;while(z--){out.records[i][keys[z]]=              ob[i].nolink[keys[z]]                                   }
		keys=Object.keys(ob[i].  link),z=keys.length;while(z--){out.records[i][keys[z]]='<a href="' + ob[i].  link[keys[z]] + '" target="_blank">&#10151;</a>'}//Logger.log(JSON.stringify(out.records[i]));
	}return out;}
function receiveBuyer(p){Logger.log(JSON.stringify(p));var db=ScriptDb.getMyDb(),user=Session.getUser().getEmail(),d=new Date().getTime(),r=db.load(/*p.db_id*/db.query({item:p.item}).next().getId());//var ob={};ob[d]=p.MyBid;if(r.bids==null){r.bids={};r.bids[user]=[];r.bids[user].unshift(ob);}else{r.bids[user].unshift(ob);} // Gets latest bid
    if(r.bids==null){r.bids=[]}r.bids.unshift({bidder:user,amount:p.MyBid,time:d,confirmed:false});db.saveBatch([r,{table:"bid",id:r.getId(),amount:p.MyBid,bidder:user,time:d,confirmed:false}],false);return;}
function serveAgents_realtor(){var ob=[],arr=[],i,j,k,r,t=[],zil=[],user=Session.getUser().getEmail(),out={"totalResultsCount":0,"records":[]},db=ScriptDb.getMyDb(),results=db.query({bids:db.anyValue(),table:"situs",isRaw:false,source:{name:"Realtor"/*"ZipRealty"/*"ChuckWillman"/*"KennethGreen"*/}}).sortBy("avm.stat.ratio",db.ASCENDING/*DESCENDING*/,db.NUMERIC/*LEXICAL*/);while(results.hasNext()){r=results.next();i=out.totalResultsCount++;
	out.records[i]={};try{if(r.avm.dataset.zillow.searchresults.response.results.result){zil[i]=r.avm.dataset.zillow.searchresults.response.results.result}}catch(e){Logger.log(e.message);zil[i]={};} // Shortcut to Zillow results
	try{if(r.bids){arr[i]=r.bids;j=arr[i].length;while(j--){t[j]=0;if(arr[i][j].bidder==user&&(arr[i][j].time>t[j])/*&&(!arr[i][j].confirmed)*/){t[j]=arr[i][j].time;out.records[i].MyBid=arr[i][j].amount}}             }}catch(e){Logger.log(e.message)}; // "MyBid"
	ob[i] = {
		"nolink"                         : {
		//		"arv"                    : function(){try{return            r.arv                         .value                    }catch(e){Logger.log(e.message);return "";}}() // "arv" Strict input // ARV
				"ask"                    : function(){try{return            r.ask                                                   }catch(e){Logger.log(e.message);return "";}}() //
			,	"ask_round"              : function(){try{return Math.round(r.ask                                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"autoEst"                : function(){try{return            r.avm.stat.autoEst                                      }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"autoEst_round"          : function(){try{return Math.round(r.avm.stat.autoEst                    / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"avmStatSet"             : function(){try{return            r.avm.stat.set                                          }catch(e){Logger.log(e.message);return "";}}() // "avmStatSet" Array of AVM statistics
			,	"baths"                  : function(){try{return            r.avm.combi.baths                                       }catch(e){Logger.log(e.message);return "";}}() //
			,	"beds"                   : function(){try{return            r.avm.combi.beds                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"bid"                    : function(){try{return            r.bids[0].amount                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"broker"                 : function(){try{return            r.source.data.brokeredBy                                }catch(e){Logger.log(e.message);return "";}}() //
			,	"city"                   : function(){try{return            r.address.city                                          }catch(e){Logger.log(e.message);return "";}}() //
			,	"cof"                    : function(){try{return            r.counter                     .value                    }catch(e){Logger.log(e.message);return "";}}() // "cof" Strict input // Counter
			,	"com"                    : function(){try{return            r.LST_Attributes[21].attribute_value                    }catch(e){Logger.log(e.message);return "";}}() // "com" Strict input // Comments 
			,	"full"                   : function(){try{return            r.address.full                                          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"grm"                    : function(){try{return Math.round(r.ask/(12*Number(zil[i].rentzestimate.amount.Text)))    }catch(e){Logger.log(e.message);return "";}}() // "grm" Compute gross rent margin
		//	,	"ia"                     : function(){try{return            r.incomeApproach                                        }catch(e){Logger.log(e.message);return "";}}() // "ia"  Compute price per income approach
		//	,	"ia_round"               : function(){try{return Math.round(r.incomeApproach                      / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
            ,   "item"                   : function(){try{return            r.item                                                  }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldPrice"          : function(){try{return            r.avm.combi.lastSoldPrice                               }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldPrice_round"    : function(){try{return Math.round(r.avm.combi.lastSoldPrice             / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"lastSoldYear"           : function(){try{return            r.avm.combi.lastSoldYear                                }catch(e){Logger.log(e.message);return "";}}() //
			,	"lot"                    : function(){try{return            r.avm.combi.lot.Text                                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"lot_round"              : function(){try{return Math.round(r.avm.combi.lot.Text                  /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"popCount"               : function(){try{return            r.avm.stat.popCount                                     }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"psf"                    : function(){try{return Math.round(r.ask/*avm.stat.autoEst*//r.avm.combi.sqft)             }catch(e){Logger.log(e.message);return "";}}() // "psf" Compute price per square foot
		//	,	"ratio"                  : function(){try{return            r.avm.stat.ratio                                        }catch(e){Logger.log(e.message);return "";}}() // "rent"
		//	,	"rent"                   : function(){try{return Math.round(zil[i].rentzestimate.amount.Text             )          }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"rent_round"             : function(){try{return Math.round(zil[i].rentzestimate.amount.Text      /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"rep"                    : function(){try{return            r.repairs                     .value                    }catch(e){Logger.log(e.message);return "";}}() // "rep" Strict input // Repairs
			,	"sa"                     : function(){try{return            r.address.sa                                            }catch(e){Logger.log(e.message);return "";}}() //
		//	,	"sdPct"                  : function(){try{return            r.avm.stat.sdPct                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf"                     : function(){try{return            r.avm.combi.sqft                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"sf_round"               : function(){try{return Math.round(r.avm.combi.sqft                      /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"state"                  : function(){try{return            r.address.state                                         }catch(e){Logger.log(e.message);return "";}}() //
            ,	"useCode"                : function(){try{return            r.avm.combi.useCode                                     }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxAmt"                 : function(){try{return            r.avm.combi.taxAmt                                      }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxAmt_round"           : function(){try{return Math.round(r.avm.combi.taxAmt                    /  100 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxVal"                 : function(){try{return            r.avm.combi.taxVal                                      }catch(e){Logger.log(e.message);return "";}}() //
			,	"taxVal_round"           : function(){try{return Math.round(r.avm.combi.taxVal                    / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
            ,	"yearBuilt"              : function(){try{return            r.avm.combi.built                                       }catch(e){Logger.log(e.message);return "";}}() //
			,	"zip"                    : function(){try{return            r.address.zip                                           }catch(e){Logger.log(e.message);return "";}}() //
										   }
	,	"link"		                     : {
				"link_boa"               : function(){try{return  /*ok*/    r.link.boa                                              }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_chase"             : function(){try{return  /*ok*/    r.link.chase                                            }catch(e){Logger.log(e.message);return "";}}() //
            ,	"link_eppraisal"         : function(){try{return  /*L1*/    r.avm.dataset.eppraisal.link                            }catch(e){Logger.log(e.message);return "";}}() // Errors: L1 local; L2 site suspected; L3 site confirmed; OK works; ok works but must copy/paste address
			,	"link_googleMap"         : function(){try{return  /*OK*/    r.link.gmap                                             }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_homeGain"          : function(){try{return  /*L3*/    r.avm.dataset.homeGain.link                             }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_homesCom"          : function(){try{return  /*ok*/    r.link.homesCom                                         }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_neighborhoodScout" : function(){try{return  /*ok*/    r.link.neighborhoodScout                                }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_propertyShark"     : function(){try{return  /*ok*/    r.link.propertyShark                                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_realEstate"        : function(){try{return  /*OK*/    r.avm.dataset.realEstate.link                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_realtor"           : function(){try{return  /*OK*/    r.avm.dataset.realtor.link                              }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_trulia"            : function(){try{return  /*OK*/    r.avm.dataset.trulia.link                               }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_yahoo"             : function(){try{return  /*OK*/    r.link.yahoo	   					                    }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zillow"            : function(){try{return  /*OK*/    r.link.zillow                                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zillowdetails"     : function(){try{return  /*OK*/    zil[i].links.homedetails.Text                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"link_zipRealty"         : function(){try{return            ""                                                      }catch(e){Logger.log(e.message);return "";}}() //            
			,	"link_zipSkinny"         : function(){try{return  /*ok*/    r.link.zipSkinny                                        }catch(e){Logger.log(e.message);return "";}}() //
										   }
	} // db_id MyBid // arv rep cof com city state zip sa useCode beds baths sf sf_round lot lot_round yearBuilt taxVal taxVal_round lastSoldPrice lastSoldPrice_round lastSoldYear taxAmt taxAmt_round ask ask_round autoEst autoEst_round sdPct popCount rent rent_round ratio grm ia ia_round psf avmStatSet // link_googleMap link_yahoo link_zillow link_zillowdetails link_eppraisal link_realtor link_realEstate link_homeGain link_trulia link_propertyShark link_neighborhoodScout link_zipSkinny link_chase link_boa link_homesCom
	var keys=Object.keys(ob[i].nolink),z=keys.length;while(z--){out.records[i][keys[z]]=              ob[i].nolink[keys[z]]                                   }
		keys=Object.keys(ob[i].  link),z=keys.length;while(z--){out.records[i][keys[z]]='<a href="' + ob[i].  link[keys[z]] + '" target="_blank">&#10151;</a>'}Logger.log(JSON.stringify(out.records[i]));
	}return out;}
function serveAgents_zipRealty(){var ob=[],arr=[],i,j,k,r,t=[],zil=[],user=Session.getUser().getEmail(),out={"totalResultsCount":0,"records":[]},db=ScriptDb.getMyDb(),results=db.query({bids:db.anyValue()/*,table:"situs"/*,isRaw:false*/,source:{name:/*"Realtor"*/"ZipRealty"/*"ChuckWillman"/*"KennethGreen"*/}}).sortBy(/*"avm.stat.ratio"*/"ratio",db.ASCENDING/*DESCENDING*/,db.NUMERIC/*LEXICAL*/);while(results.hasNext()){r=results.next();i=out.totalResultsCount++;
	out.records[i]={};try{if(r.avm.dataset.zillow.searchresults.response.results.result){zil[i]=r.avm.dataset.zillow.searchresults.response.results.result}}catch(e){Logger.log(e.message);zil[i]={};} // Shortcut to Zillow results
	try{if(r.bids){arr[i]=r.bids;j=arr[i].length;while(j--){t[j]=0;if(arr[i][j].bidder==user&&(arr[i][j].time>t[j])/*&&(!arr[i][j].confirmed)*/){t[j]=arr[i][j].time;out.records[i].MyBid=arr[i][j].amount}}             }}catch(e){Logger.log(e.message)}; // "MyBid"
	ob[i] = {
		"nolink"                         : {
				"ask"                    : function(){try{return            r.ask                                                   }catch(e){Logger.log(e.message);return "";}}() //
			,	"ask_round"              : function(){try{return Math.round(r.ask                                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst"                : function(){try{return            r.detail.avm.estimate                                   }catch(e){Logger.log(e.message);return "";}}() //
			,	"autoEst_round"          : function(){try{return Math.round(r.detail.avm.estimate                 / 1000 )          }catch(e){Logger.log(e.message);return "";}}() //
			,	"bid"                    : function(){try{return            r.bids[0].amount                                        }catch(e){Logger.log(e.message);return "";}}() //
			,	"csz"                    : function(){try{return            r.csz                                                   }catch(e){Logger.log(e.message);return "";}}() //
            ,   "item"                   : function(){try{return            r.item                                                  }catch(e){Logger.log(e.message);return "";}}() //
            ,   "mlsName"                : function(){try{return            r.mlsName                                               }catch(e){Logger.log(e.message);return "";}}() //
            ,   "mlsNumber"              : function(){try{return            r.mlsNumber_1                                           }catch(e){Logger.log(e.message);return "";}}() //
			,	"ratio"                  : function(){try{return            r.ratio                                                 }catch(e){Logger.log(e.message);return "";}}() // "rent"
			,	"sa"                     : function(){try{return            r.sa                                                    }catch(e){Logger.log(e.message);return "";}}() //
            ,	"useCode"                : function(){try{return            r.useCode                                               }catch(e){Logger.log(e.message);return "";}}() //
			                               }
	,	"link"		                     : {}
	} // db_id MyBid // arv rep cof com city state zip sa useCode beds baths sf sf_round lot lot_round yearBuilt taxVal taxVal_round lastSoldPrice lastSoldPrice_round lastSoldYear taxAmt taxAmt_round ask ask_round autoEst autoEst_round sdPct popCount rent rent_round ratio grm ia ia_round psf avmStatSet // link_googleMap link_yahoo link_zillow link_zillowdetails link_eppraisal link_realtor link_realEstate link_homeGain link_trulia link_propertyShark link_neighborhoodScout link_zipSkinny link_chase link_boa link_homesCom
	var keys=Object.keys(ob[i].nolink),z=keys.length;while(z--){out.records[i][keys[z]]=              ob[i].nolink[keys[z]]                                   }
		keys=Object.keys(ob[i].  link),z=keys.length;while(z--){out.records[i][keys[z]]='<a href="' + ob[i].  link[keys[z]] + '" target="_blank">&#10151;</a>'}Logger.log(JSON.stringify(out.records[i]));
	}return out;}
function receiveAgent(p){Logger.log(JSON.stringify(p));var db=ScriptDb.getMyDb(),user=Session.getUser().getEmail(),d=new Date().getTime(),r=db.load(/*p.db_id*/db.query({item:p.item}).next().getId());//var ob={};ob[d]=p.MyBid;if(r.bids==null){r.bids={};r.bids[user]=[];r.bids[user].unshift(ob);}else{r.bids[user].unshift(ob);} // Gets latest bid
    if(r.bids==null){r.bids=[]}r.bids.unshift({bidder:user,amount:p.MyBid,time:d,confirmed:false});db.saveBatch([r,{table:"bid",id:r.getId(),amount:p.MyBid,bidder:user,time:d,confirmed:false}],false);return;}